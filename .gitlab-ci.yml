stages:
  - test
  - lint
  - build
  - deploy
  - stop

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml

tailwind-gen:
  stage: lint
  image: node:18-alpine
  before_script:
    - npm install
    - npm install -g uglifycss
  script:
    - npx tailwindcss -i "./src/input.css" -o "./assets/styles/$(cat VERSION)/style.css"
    - uglifycss --output "./assets/styles/$(cat VERSION)/style.min.css" "./assets/styles/$(cat VERSION)/style.css"
  artifacts:
    paths:
      - assets/styles/
  rules:
  - exists:
    - tailwind.config.js
    - src/input.css

docker-build:
  stage: build
  image: docker:20-git
  script:
    - docker build -t $CI_REGISTRY_IMAGE/vprw-web:latest -f Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker image push --all-tags $CI_REGISTRY_IMAGE/vprw-web
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    exists:
    - Dockerfile
    changes:
    - "*.py"
    - "**/*.html"
    - "**/*.css"
    - Dockerfile
    - .gitlab-ci.yml

deploy-web:
  stage: deploy
  image: docker:20-git
  environment:
    name: production/website
    url: https://vapronva.pw
    on_stop: stop-vprwweb-production
  script:
    - docker-compose -f 'docker-compose.yml' --project-name 'wewewo-vprwweb-vapronva' down
    - docker-compose -f 'docker-compose.yml' --project-name 'wewewo-vprwweb-vapronva' up -d
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    exists:
    - docker-compose.yml
    - Dockerfile
    changes:
    - "*.py"
    - "**/*.html"
    - "**/*.css"
    - Dockerfile
    - docker-compose.yml
    - .gitlab-ci.yml

stop-vprwweb-production:
  stage: stop
  image: docker:20-git
  script:
    - docker-compose -f 'docker-compose.yml' --project-name 'wewewo-vprwweb-vapronva' down
  when: manual
  environment:
    name: production/website
    url: https://vapronva.pw
    action: stop
